#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FLM.DCIP.TestInterface
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="AMS.12.21.2009")]
	public partial class SiteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertExhibitor(Exhibitor instance);
    partial void UpdateExhibitor(Exhibitor instance);
    partial void DeleteExhibitor(Exhibitor instance);
    #endregion
		
		public SiteDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AMS_12_21_2009ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<Exhibitor> Exhibitors
		{
			get
			{
				return this.GetTable<Exhibitor>();
			}
		}
	}
	
	[Table(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Site_Id;
		
		private int _Chain_Id;
		
		private int _Exhibitor_Id;
		
		private int _Status_Id;
		
		private int _DMA_Id;
		
		private int _Facility_Type_Id;
		
		private string _Dynamics_Contract_Reference;
		
		private System.Nullable<System.DateTime> _Open_Date;
		
		private System.Nullable<System.DateTime> _Acceptance_Date;
		
		private System.Nullable<System.DateTime> _Closed_Date;
		
		private int _Site_Code;
		
		private string _Site_Name;
		
		private string _Street_1;
		
		private string _Street_2;
		
		private string _Street_3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip_Code;
		
		private string _County;
		
		private string _Nation;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<decimal> _Latitude;
		
		private string _Site_Email_Address;
		
		private string _Site_Abbreviation;
		
		private string _Manager_Name;
		
		private System.Nullable<bool> _Distributed_Core;
		
		private System.Nullable<bool> _Discount_Site;
		
		private System.Nullable<bool> _Secure_Storage_Room;
		
		private System.Nullable<bool> _Booth_Elevater;
		
		private System.Nullable<bool> _Loading_Dock;
		
		private System.Nullable<bool> _Labor_Restriction;
		
		private System.Nullable<bool> _Delivery_Restriction;
		
		private System.Nullable<System.DateTime> _Record_Created;
		
		private string _Record_Created_By;
		
		private System.Nullable<System.DateTime> _Record_Updated;
		
		private string _Record_Updated_By;
		
		private System.Nullable<System.DateTime> _Record_Deprecated;
		
		private string _Record_Deprecated_By;
		
		private EntityRef<Exhibitor> _Exhibitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSite_IdChanging(int value);
    partial void OnSite_IdChanged();
    partial void OnChain_IdChanging(int value);
    partial void OnChain_IdChanged();
    partial void OnExhibitor_IdChanging(int value);
    partial void OnExhibitor_IdChanged();
    partial void OnStatus_IdChanging(int value);
    partial void OnStatus_IdChanged();
    partial void OnDMA_IdChanging(int value);
    partial void OnDMA_IdChanged();
    partial void OnFacility_Type_IdChanging(int value);
    partial void OnFacility_Type_IdChanged();
    partial void OnDynamics_Contract_ReferenceChanging(string value);
    partial void OnDynamics_Contract_ReferenceChanged();
    partial void OnOpen_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpen_DateChanged();
    partial void OnAcceptance_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptance_DateChanged();
    partial void OnClosed_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosed_DateChanged();
    partial void OnSite_CodeChanging(int value);
    partial void OnSite_CodeChanged();
    partial void OnSite_NameChanging(string value);
    partial void OnSite_NameChanged();
    partial void OnStreet_1Changing(string value);
    partial void OnStreet_1Changed();
    partial void OnStreet_2Changing(string value);
    partial void OnStreet_2Changed();
    partial void OnStreet_3Changing(string value);
    partial void OnStreet_3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnSite_Email_AddressChanging(string value);
    partial void OnSite_Email_AddressChanged();
    partial void OnSite_AbbreviationChanging(string value);
    partial void OnSite_AbbreviationChanged();
    partial void OnManager_NameChanging(string value);
    partial void OnManager_NameChanged();
    partial void OnDistributed_CoreChanging(System.Nullable<bool> value);
    partial void OnDistributed_CoreChanged();
    partial void OnDiscount_SiteChanging(System.Nullable<bool> value);
    partial void OnDiscount_SiteChanged();
    partial void OnSecure_Storage_RoomChanging(System.Nullable<bool> value);
    partial void OnSecure_Storage_RoomChanged();
    partial void OnBooth_ElevaterChanging(System.Nullable<bool> value);
    partial void OnBooth_ElevaterChanged();
    partial void OnLoading_DockChanging(System.Nullable<bool> value);
    partial void OnLoading_DockChanged();
    partial void OnLabor_RestrictionChanging(System.Nullable<bool> value);
    partial void OnLabor_RestrictionChanged();
    partial void OnDelivery_RestrictionChanging(System.Nullable<bool> value);
    partial void OnDelivery_RestrictionChanged();
    partial void OnRecord_CreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_CreatedChanged();
    partial void OnRecord_Created_ByChanging(string value);
    partial void OnRecord_Created_ByChanged();
    partial void OnRecord_UpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_UpdatedChanged();
    partial void OnRecord_Updated_ByChanging(string value);
    partial void OnRecord_Updated_ByChanged();
    partial void OnRecord_DeprecatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_DeprecatedChanged();
    partial void OnRecord_Deprecated_ByChanging(string value);
    partial void OnRecord_Deprecated_ByChanged();
    #endregion
		
		public Site()
		{
			this._Exhibitor = default(EntityRef<Exhibitor>);
			OnCreated();
		}
		
		[Column(Storage="_Site_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Site_Id
		{
			get
			{
				return this._Site_Id;
			}
			set
			{
				if ((this._Site_Id != value))
				{
					this.OnSite_IdChanging(value);
					this.SendPropertyChanging();
					this._Site_Id = value;
					this.SendPropertyChanged("Site_Id");
					this.OnSite_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Chain_Id", DbType="Int NOT NULL")]
		public int Chain_Id
		{
			get
			{
				return this._Chain_Id;
			}
			set
			{
				if ((this._Chain_Id != value))
				{
					this.OnChain_IdChanging(value);
					this.SendPropertyChanging();
					this._Chain_Id = value;
					this.SendPropertyChanged("Chain_Id");
					this.OnChain_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Exhibitor_Id", DbType="Int NOT NULL")]
		public int Exhibitor_Id
		{
			get
			{
				return this._Exhibitor_Id;
			}
			set
			{
				if ((this._Exhibitor_Id != value))
				{
					if (this._Exhibitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExhibitor_IdChanging(value);
					this.SendPropertyChanging();
					this._Exhibitor_Id = value;
					this.SendPropertyChanged("Exhibitor_Id");
					this.OnExhibitor_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Status_Id", DbType="Int NOT NULL")]
		public int Status_Id
		{
			get
			{
				return this._Status_Id;
			}
			set
			{
				if ((this._Status_Id != value))
				{
					this.OnStatus_IdChanging(value);
					this.SendPropertyChanging();
					this._Status_Id = value;
					this.SendPropertyChanged("Status_Id");
					this.OnStatus_IdChanged();
				}
			}
		}
		
		[Column(Storage="_DMA_Id", DbType="Int NOT NULL")]
		public int DMA_Id
		{
			get
			{
				return this._DMA_Id;
			}
			set
			{
				if ((this._DMA_Id != value))
				{
					this.OnDMA_IdChanging(value);
					this.SendPropertyChanging();
					this._DMA_Id = value;
					this.SendPropertyChanged("DMA_Id");
					this.OnDMA_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Facility_Type_Id", DbType="Int NOT NULL")]
		public int Facility_Type_Id
		{
			get
			{
				return this._Facility_Type_Id;
			}
			set
			{
				if ((this._Facility_Type_Id != value))
				{
					this.OnFacility_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Facility_Type_Id = value;
					this.SendPropertyChanged("Facility_Type_Id");
					this.OnFacility_Type_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Dynamics_Contract_Reference", DbType="VarChar(32)")]
		public string Dynamics_Contract_Reference
		{
			get
			{
				return this._Dynamics_Contract_Reference;
			}
			set
			{
				if ((this._Dynamics_Contract_Reference != value))
				{
					this.OnDynamics_Contract_ReferenceChanging(value);
					this.SendPropertyChanging();
					this._Dynamics_Contract_Reference = value;
					this.SendPropertyChanged("Dynamics_Contract_Reference");
					this.OnDynamics_Contract_ReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_Open_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Open_Date
		{
			get
			{
				return this._Open_Date;
			}
			set
			{
				if ((this._Open_Date != value))
				{
					this.OnOpen_DateChanging(value);
					this.SendPropertyChanging();
					this._Open_Date = value;
					this.SendPropertyChanged("Open_Date");
					this.OnOpen_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Acceptance_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Acceptance_Date
		{
			get
			{
				return this._Acceptance_Date;
			}
			set
			{
				if ((this._Acceptance_Date != value))
				{
					this.OnAcceptance_DateChanging(value);
					this.SendPropertyChanging();
					this._Acceptance_Date = value;
					this.SendPropertyChanged("Acceptance_Date");
					this.OnAcceptance_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Closed_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Closed_Date
		{
			get
			{
				return this._Closed_Date;
			}
			set
			{
				if ((this._Closed_Date != value))
				{
					this.OnClosed_DateChanging(value);
					this.SendPropertyChanging();
					this._Closed_Date = value;
					this.SendPropertyChanged("Closed_Date");
					this.OnClosed_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Code", DbType="Int NOT NULL")]
		public int Site_Code
		{
			get
			{
				return this._Site_Code;
			}
			set
			{
				if ((this._Site_Code != value))
				{
					this.OnSite_CodeChanging(value);
					this.SendPropertyChanging();
					this._Site_Code = value;
					this.SendPropertyChanged("Site_Code");
					this.OnSite_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Site_Name
		{
			get
			{
				return this._Site_Name;
			}
			set
			{
				if ((this._Site_Name != value))
				{
					this.OnSite_NameChanging(value);
					this.SendPropertyChanging();
					this._Site_Name = value;
					this.SendPropertyChanged("Site_Name");
					this.OnSite_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Street_1", DbType="VarChar(64)")]
		public string Street_1
		{
			get
			{
				return this._Street_1;
			}
			set
			{
				if ((this._Street_1 != value))
				{
					this.OnStreet_1Changing(value);
					this.SendPropertyChanging();
					this._Street_1 = value;
					this.SendPropertyChanged("Street_1");
					this.OnStreet_1Changed();
				}
			}
		}
		
		[Column(Storage="_Street_2", DbType="VarChar(64)")]
		public string Street_2
		{
			get
			{
				return this._Street_2;
			}
			set
			{
				if ((this._Street_2 != value))
				{
					this.OnStreet_2Changing(value);
					this.SendPropertyChanging();
					this._Street_2 = value;
					this.SendPropertyChanged("Street_2");
					this.OnStreet_2Changed();
				}
			}
		}
		
		[Column(Storage="_Street_3", DbType="VarChar(64)")]
		public string Street_3
		{
			get
			{
				return this._Street_3;
			}
			set
			{
				if ((this._Street_3 != value))
				{
					this.OnStreet_3Changing(value);
					this.SendPropertyChanging();
					this._Street_3 = value;
					this.SendPropertyChanged("Street_3");
					this.OnStreet_3Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(64)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Zip_Code", DbType="NVarChar(16)")]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_County", DbType="VarChar(64)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[Column(Storage="_Nation", DbType="VarChar(64)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Email_Address", DbType="VarChar(128)")]
		public string Site_Email_Address
		{
			get
			{
				return this._Site_Email_Address;
			}
			set
			{
				if ((this._Site_Email_Address != value))
				{
					this.OnSite_Email_AddressChanging(value);
					this.SendPropertyChanging();
					this._Site_Email_Address = value;
					this.SendPropertyChanged("Site_Email_Address");
					this.OnSite_Email_AddressChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Abbreviation", DbType="VarChar(16)")]
		public string Site_Abbreviation
		{
			get
			{
				return this._Site_Abbreviation;
			}
			set
			{
				if ((this._Site_Abbreviation != value))
				{
					this.OnSite_AbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Site_Abbreviation = value;
					this.SendPropertyChanged("Site_Abbreviation");
					this.OnSite_AbbreviationChanged();
				}
			}
		}
		
		[Column(Storage="_Manager_Name", DbType="VarChar(128)")]
		public string Manager_Name
		{
			get
			{
				return this._Manager_Name;
			}
			set
			{
				if ((this._Manager_Name != value))
				{
					this.OnManager_NameChanging(value);
					this.SendPropertyChanging();
					this._Manager_Name = value;
					this.SendPropertyChanged("Manager_Name");
					this.OnManager_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Distributed_Core", DbType="Bit")]
		public System.Nullable<bool> Distributed_Core
		{
			get
			{
				return this._Distributed_Core;
			}
			set
			{
				if ((this._Distributed_Core != value))
				{
					this.OnDistributed_CoreChanging(value);
					this.SendPropertyChanging();
					this._Distributed_Core = value;
					this.SendPropertyChanged("Distributed_Core");
					this.OnDistributed_CoreChanged();
				}
			}
		}
		
		[Column(Storage="_Discount_Site", DbType="Bit")]
		public System.Nullable<bool> Discount_Site
		{
			get
			{
				return this._Discount_Site;
			}
			set
			{
				if ((this._Discount_Site != value))
				{
					this.OnDiscount_SiteChanging(value);
					this.SendPropertyChanging();
					this._Discount_Site = value;
					this.SendPropertyChanged("Discount_Site");
					this.OnDiscount_SiteChanged();
				}
			}
		}
		
		[Column(Storage="_Secure_Storage_Room", DbType="Bit")]
		public System.Nullable<bool> Secure_Storage_Room
		{
			get
			{
				return this._Secure_Storage_Room;
			}
			set
			{
				if ((this._Secure_Storage_Room != value))
				{
					this.OnSecure_Storage_RoomChanging(value);
					this.SendPropertyChanging();
					this._Secure_Storage_Room = value;
					this.SendPropertyChanged("Secure_Storage_Room");
					this.OnSecure_Storage_RoomChanged();
				}
			}
		}
		
		[Column(Storage="_Booth_Elevater", DbType="Bit")]
		public System.Nullable<bool> Booth_Elevater
		{
			get
			{
				return this._Booth_Elevater;
			}
			set
			{
				if ((this._Booth_Elevater != value))
				{
					this.OnBooth_ElevaterChanging(value);
					this.SendPropertyChanging();
					this._Booth_Elevater = value;
					this.SendPropertyChanged("Booth_Elevater");
					this.OnBooth_ElevaterChanged();
				}
			}
		}
		
		[Column(Storage="_Loading_Dock", DbType="Bit")]
		public System.Nullable<bool> Loading_Dock
		{
			get
			{
				return this._Loading_Dock;
			}
			set
			{
				if ((this._Loading_Dock != value))
				{
					this.OnLoading_DockChanging(value);
					this.SendPropertyChanging();
					this._Loading_Dock = value;
					this.SendPropertyChanged("Loading_Dock");
					this.OnLoading_DockChanged();
				}
			}
		}
		
		[Column(Storage="_Labor_Restriction", DbType="Bit")]
		public System.Nullable<bool> Labor_Restriction
		{
			get
			{
				return this._Labor_Restriction;
			}
			set
			{
				if ((this._Labor_Restriction != value))
				{
					this.OnLabor_RestrictionChanging(value);
					this.SendPropertyChanging();
					this._Labor_Restriction = value;
					this.SendPropertyChanged("Labor_Restriction");
					this.OnLabor_RestrictionChanged();
				}
			}
		}
		
		[Column(Storage="_Delivery_Restriction", DbType="Bit")]
		public System.Nullable<bool> Delivery_Restriction
		{
			get
			{
				return this._Delivery_Restriction;
			}
			set
			{
				if ((this._Delivery_Restriction != value))
				{
					this.OnDelivery_RestrictionChanging(value);
					this.SendPropertyChanging();
					this._Delivery_Restriction = value;
					this.SendPropertyChanged("Delivery_Restriction");
					this.OnDelivery_RestrictionChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Created
		{
			get
			{
				return this._Record_Created;
			}
			set
			{
				if ((this._Record_Created != value))
				{
					this.OnRecord_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Created = value;
					this.SendPropertyChanged("Record_Created");
					this.OnRecord_CreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Created_By", DbType="VarChar(50)")]
		public string Record_Created_By
		{
			get
			{
				return this._Record_Created_By;
			}
			set
			{
				if ((this._Record_Created_By != value))
				{
					this.OnRecord_Created_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Created_By = value;
					this.SendPropertyChanged("Record_Created_By");
					this.OnRecord_Created_ByChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Updated
		{
			get
			{
				return this._Record_Updated;
			}
			set
			{
				if ((this._Record_Updated != value))
				{
					this.OnRecord_UpdatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Updated = value;
					this.SendPropertyChanged("Record_Updated");
					this.OnRecord_UpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Updated_By", DbType="VarChar(50)")]
		public string Record_Updated_By
		{
			get
			{
				return this._Record_Updated_By;
			}
			set
			{
				if ((this._Record_Updated_By != value))
				{
					this.OnRecord_Updated_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Updated_By = value;
					this.SendPropertyChanged("Record_Updated_By");
					this.OnRecord_Updated_ByChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Deprecated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Deprecated
		{
			get
			{
				return this._Record_Deprecated;
			}
			set
			{
				if ((this._Record_Deprecated != value))
				{
					this.OnRecord_DeprecatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Deprecated = value;
					this.SendPropertyChanged("Record_Deprecated");
					this.OnRecord_DeprecatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Deprecated_By", DbType="VarChar(50)")]
		public string Record_Deprecated_By
		{
			get
			{
				return this._Record_Deprecated_By;
			}
			set
			{
				if ((this._Record_Deprecated_By != value))
				{
					this.OnRecord_Deprecated_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Deprecated_By = value;
					this.SendPropertyChanged("Record_Deprecated_By");
					this.OnRecord_Deprecated_ByChanged();
				}
			}
		}
		
		[Association(Name="Exhibitor_Site", Storage="_Exhibitor", ThisKey="Exhibitor_Id", OtherKey="Exhibitor_Id", IsForeignKey=true)]
		public Exhibitor Exhibitor
		{
			get
			{
				return this._Exhibitor.Entity;
			}
			set
			{
				Exhibitor previousValue = this._Exhibitor.Entity;
				if (((previousValue != value) 
							|| (this._Exhibitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exhibitor.Entity = null;
						previousValue.Sites.Remove(this);
					}
					this._Exhibitor.Entity = value;
					if ((value != null))
					{
						value.Sites.Add(this);
						this._Exhibitor_Id = value.Exhibitor_Id;
					}
					else
					{
						this._Exhibitor_Id = default(int);
					}
					this.SendPropertyChanged("Exhibitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exhibitor")]
	public partial class Exhibitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Exhibitor_Id;
		
		private string _Exhibitor_Name;
		
		private string _Exhibitor_Abbreviation;
		
		private string _URI_Mapping;
		
		private System.Nullable<System.DateTime> _Record_Created;
		
		private string _Record_Created_By;
		
		private System.Nullable<System.DateTime> _Record_Updated;
		
		private string _Record_Updated_By;
		
		private System.Nullable<System.DateTime> _Record_Deprecated;
		
		private string _Record_Deprecated_By;
		
		private EntitySet<Site> _Sites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExhibitor_IdChanging(int value);
    partial void OnExhibitor_IdChanged();
    partial void OnExhibitor_NameChanging(string value);
    partial void OnExhibitor_NameChanged();
    partial void OnExhibitor_AbbreviationChanging(string value);
    partial void OnExhibitor_AbbreviationChanged();
    partial void OnURI_MappingChanging(string value);
    partial void OnURI_MappingChanged();
    partial void OnRecord_CreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_CreatedChanged();
    partial void OnRecord_Created_ByChanging(string value);
    partial void OnRecord_Created_ByChanged();
    partial void OnRecord_UpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_UpdatedChanged();
    partial void OnRecord_Updated_ByChanging(string value);
    partial void OnRecord_Updated_ByChanged();
    partial void OnRecord_DeprecatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRecord_DeprecatedChanged();
    partial void OnRecord_Deprecated_ByChanging(string value);
    partial void OnRecord_Deprecated_ByChanged();
    #endregion
		
		public Exhibitor()
		{
			this._Sites = new EntitySet<Site>(new Action<Site>(this.attach_Sites), new Action<Site>(this.detach_Sites));
			OnCreated();
		}
		
		[Column(Storage="_Exhibitor_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Exhibitor_Id
		{
			get
			{
				return this._Exhibitor_Id;
			}
			set
			{
				if ((this._Exhibitor_Id != value))
				{
					this.OnExhibitor_IdChanging(value);
					this.SendPropertyChanging();
					this._Exhibitor_Id = value;
					this.SendPropertyChanged("Exhibitor_Id");
					this.OnExhibitor_IdChanged();
				}
			}
		}
		
		[Column(Storage="_Exhibitor_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Exhibitor_Name
		{
			get
			{
				return this._Exhibitor_Name;
			}
			set
			{
				if ((this._Exhibitor_Name != value))
				{
					this.OnExhibitor_NameChanging(value);
					this.SendPropertyChanging();
					this._Exhibitor_Name = value;
					this.SendPropertyChanged("Exhibitor_Name");
					this.OnExhibitor_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Exhibitor_Abbreviation", DbType="VarChar(64)")]
		public string Exhibitor_Abbreviation
		{
			get
			{
				return this._Exhibitor_Abbreviation;
			}
			set
			{
				if ((this._Exhibitor_Abbreviation != value))
				{
					this.OnExhibitor_AbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Exhibitor_Abbreviation = value;
					this.SendPropertyChanged("Exhibitor_Abbreviation");
					this.OnExhibitor_AbbreviationChanged();
				}
			}
		}
		
		[Column(Storage="_URI_Mapping", DbType="VarChar(50)")]
		public string URI_Mapping
		{
			get
			{
				return this._URI_Mapping;
			}
			set
			{
				if ((this._URI_Mapping != value))
				{
					this.OnURI_MappingChanging(value);
					this.SendPropertyChanging();
					this._URI_Mapping = value;
					this.SendPropertyChanged("URI_Mapping");
					this.OnURI_MappingChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Created
		{
			get
			{
				return this._Record_Created;
			}
			set
			{
				if ((this._Record_Created != value))
				{
					this.OnRecord_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Created = value;
					this.SendPropertyChanged("Record_Created");
					this.OnRecord_CreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Created_By", DbType="VarChar(50)")]
		public string Record_Created_By
		{
			get
			{
				return this._Record_Created_By;
			}
			set
			{
				if ((this._Record_Created_By != value))
				{
					this.OnRecord_Created_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Created_By = value;
					this.SendPropertyChanged("Record_Created_By");
					this.OnRecord_Created_ByChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Updated
		{
			get
			{
				return this._Record_Updated;
			}
			set
			{
				if ((this._Record_Updated != value))
				{
					this.OnRecord_UpdatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Updated = value;
					this.SendPropertyChanged("Record_Updated");
					this.OnRecord_UpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Updated_By", DbType="VarChar(50)")]
		public string Record_Updated_By
		{
			get
			{
				return this._Record_Updated_By;
			}
			set
			{
				if ((this._Record_Updated_By != value))
				{
					this.OnRecord_Updated_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Updated_By = value;
					this.SendPropertyChanged("Record_Updated_By");
					this.OnRecord_Updated_ByChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Deprecated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Record_Deprecated
		{
			get
			{
				return this._Record_Deprecated;
			}
			set
			{
				if ((this._Record_Deprecated != value))
				{
					this.OnRecord_DeprecatedChanging(value);
					this.SendPropertyChanging();
					this._Record_Deprecated = value;
					this.SendPropertyChanged("Record_Deprecated");
					this.OnRecord_DeprecatedChanged();
				}
			}
		}
		
		[Column(Storage="_Record_Deprecated_By", DbType="VarChar(50)")]
		public string Record_Deprecated_By
		{
			get
			{
				return this._Record_Deprecated_By;
			}
			set
			{
				if ((this._Record_Deprecated_By != value))
				{
					this.OnRecord_Deprecated_ByChanging(value);
					this.SendPropertyChanging();
					this._Record_Deprecated_By = value;
					this.SendPropertyChanged("Record_Deprecated_By");
					this.OnRecord_Deprecated_ByChanged();
				}
			}
		}
		
		[Association(Name="Exhibitor_Site", Storage="_Sites", ThisKey="Exhibitor_Id", OtherKey="Exhibitor_Id")]
		public EntitySet<Site> Sites
		{
			get
			{
				return this._Sites;
			}
			set
			{
				this._Sites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sites(Site entity)
		{
			this.SendPropertyChanging();
			entity.Exhibitor = this;
		}
		
		private void detach_Sites(Site entity)
		{
			this.SendPropertyChanging();
			entity.Exhibitor = null;
		}
	}
}
#pragma warning restore 1591
